// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reply.proto

/*
Package reply is a generated protocol buffer package.

It is generated from these files:
	reply.proto

It has these top-level messages:
	AddRequest
	AddResponse
	ListRequest
	ListResponse
	Data
	Reply
*/
package reply

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 评论类型
type ReplyType int32

const (
	ReplyType_PLAY ReplyType = 0
)

var ReplyType_name = map[int32]string{
	0: "PLAY",
}
var ReplyType_value = map[string]int32{
	"PLAY": 0,
}

func (x ReplyType) String() string {
	return proto.EnumName(ReplyType_name, int32(x))
}
func (ReplyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// ------------------- 添加评论 -------------------
type AddRequest struct {
	Mid      int64  `protobuf:"varint,1,opt,name=mid" json:"mid,omitempty"`
	SourceId string `protobuf:"bytes,2,opt,name=sourceId" json:"sourceId,omitempty"`
	TypeId   int64  `protobuf:"varint,3,opt,name=typeId" json:"typeId,omitempty"`
	ParentId int64  `protobuf:"varint,4,opt,name=parentId" json:"parentId,omitempty"`
	Comment  string `protobuf:"bytes,5,opt,name=comment" json:"comment,omitempty"`
}

func (m *AddRequest) Reset()                    { *m = AddRequest{} }
func (m *AddRequest) String() string            { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()               {}
func (*AddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddRequest) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *AddRequest) GetSourceId() string {
	if m != nil {
		return m.SourceId
	}
	return ""
}

func (m *AddRequest) GetTypeId() int64 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *AddRequest) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *AddRequest) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type AddResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *AddResponse) Reset()                    { *m = AddResponse{} }
func (m *AddResponse) String() string            { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()               {}
func (*AddResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AddResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// ------------------- 获取评论 -------------------
type ListRequest struct {
	SourceId string `protobuf:"bytes,1,opt,name=sourceId" json:"sourceId,omitempty"`
	TypeId   int64  `protobuf:"varint,2,opt,name=typeId" json:"typeId,omitempty"`
	Pn       int64  `protobuf:"varint,3,opt,name=pn" json:"pn,omitempty"`
	Ps       int64  `protobuf:"varint,4,opt,name=ps" json:"ps,omitempty"`
	Order    int64  `protobuf:"varint,5,opt,name=order" json:"order,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListRequest) GetSourceId() string {
	if m != nil {
		return m.SourceId
	}
	return ""
}

func (m *ListRequest) GetTypeId() int64 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *ListRequest) GetPn() int64 {
	if m != nil {
		return m.Pn
	}
	return 0
}

func (m *ListRequest) GetPs() int64 {
	if m != nil {
		return m.Ps
	}
	return 0
}

func (m *ListRequest) GetOrder() int64 {
	if m != nil {
		return m.Order
	}
	return 0
}

type ListResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *Data  `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListResponse) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type Data struct {
	All   map[int64]*Reply `protobuf:"bytes,1,rep,name=all" json:"all,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Rs    []*Reply         `protobuf:"bytes,2,rep,name=rs" json:"rs,omitempty"`
	Count int64            `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *Data) Reset()                    { *m = Data{} }
func (m *Data) String() string            { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()               {}
func (*Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Data) GetAll() map[int64]*Reply {
	if m != nil {
		return m.All
	}
	return nil
}

func (m *Data) GetRs() []*Reply {
	if m != nil {
		return m.Rs
	}
	return nil
}

func (m *Data) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Reply struct {
	Id       int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SourceId string  `protobuf:"bytes,2,opt,name=sourceId" json:"sourceId,omitempty"`
	TypeId   int64   `protobuf:"varint,3,opt,name=typeId" json:"typeId,omitempty"`
	Mid      int64   `protobuf:"varint,4,opt,name=mid" json:"mid,omitempty"`
	Comment  string  `protobuf:"bytes,5,opt,name=comment" json:"comment,omitempty"`
	ParentId int64   `protobuf:"varint,6,opt,name=parentId" json:"parentId,omitempty"`
	Path     string  `protobuf:"bytes,7,opt,name=path" json:"path,omitempty"`
	State    int64   `protobuf:"varint,8,opt,name=state" json:"state,omitempty"`
	Created  int64   `protobuf:"varint,9,opt,name=created" json:"created,omitempty"`
	Rids     []int64 `protobuf:"varint,10,rep,packed,name=rids" json:"rids,omitempty"`
}

func (m *Reply) Reset()                    { *m = Reply{} }
func (m *Reply) String() string            { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()               {}
func (*Reply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Reply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Reply) GetSourceId() string {
	if m != nil {
		return m.SourceId
	}
	return ""
}

func (m *Reply) GetTypeId() int64 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *Reply) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *Reply) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Reply) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *Reply) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Reply) GetState() int64 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *Reply) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Reply) GetRids() []int64 {
	if m != nil {
		return m.Rids
	}
	return nil
}

func init() {
	proto.RegisterType((*AddRequest)(nil), "reply.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "reply.AddResponse")
	proto.RegisterType((*ListRequest)(nil), "reply.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "reply.ListResponse")
	proto.RegisterType((*Data)(nil), "reply.data")
	proto.RegisterType((*Reply)(nil), "reply.reply")
	proto.RegisterEnum("reply.ReplyType", ReplyType_name, ReplyType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ReplyService service

type ReplyServiceClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type replyServiceClient struct {
	cc *grpc.ClientConn
}

func NewReplyServiceClient(cc *grpc.ClientConn) ReplyServiceClient {
	return &replyServiceClient{cc}
}

func (c *replyServiceClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := grpc.Invoke(ctx, "/reply.ReplyService/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replyServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/reply.ReplyService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ReplyService service

type ReplyServiceServer interface {
	Add(context.Context, *AddRequest) (*AddResponse, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
}

func RegisterReplyServiceServer(s *grpc.Server, srv ReplyServiceServer) {
	s.RegisterService(&_ReplyService_serviceDesc, srv)
}

func _ReplyService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplyServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reply.ReplyService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplyServiceServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReplyService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplyServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reply.ReplyService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplyServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReplyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "reply.ReplyService",
	HandlerType: (*ReplyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _ReplyService_Add_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ReplyService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reply.proto",
}

func init() { proto.RegisterFile("reply.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x4f, 0x8b, 0x13, 0x31,
	0x14, 0x77, 0x32, 0xd3, 0x6e, 0xfb, 0xa6, 0xc8, 0x1a, 0x57, 0x09, 0x45, 0xb0, 0xcc, 0x41, 0x8a,
	0x48, 0x85, 0x7a, 0x11, 0x3d, 0x15, 0xf4, 0xb0, 0xb0, 0x07, 0x19, 0xbd, 0x78, 0xf0, 0x10, 0x27,
	0x0f, 0x2d, 0x3b, 0x7f, 0x62, 0x92, 0xae, 0xcc, 0x37, 0xf0, 0xa3, 0xf8, 0xdd, 0xfc, 0x12, 0x92,
	0x97, 0x4c, 0xb7, 0x5d, 0xd8, 0x4b, 0x2f, 0xe1, 0xfd, 0xde, 0xbf, 0xfc, 0xde, 0xcb, 0x2f, 0x90,
	0x1b, 0xd4, 0x75, 0xbf, 0xd2, 0xa6, 0x73, 0x1d, 0x1f, 0x11, 0x28, 0xfe, 0x24, 0x00, 0x1b, 0xa5,
	0x4a, 0xfc, 0xb5, 0x43, 0xeb, 0xf8, 0x39, 0xa4, 0xcd, 0x56, 0x89, 0x64, 0x91, 0x2c, 0xd3, 0xd2,
	0x9b, 0x7c, 0x0e, 0x13, 0xdb, 0xed, 0x4c, 0x85, 0x97, 0x4a, 0xb0, 0x45, 0xb2, 0x9c, 0x96, 0x7b,
	0xcc, 0x9f, 0xc2, 0xd8, 0xf5, 0xda, 0x47, 0x52, 0x2a, 0x88, 0xc8, 0xd7, 0x68, 0x69, 0xb0, 0x75,
	0x97, 0x4a, 0x64, 0x14, 0xd9, 0x63, 0x2e, 0xe0, 0xac, 0xea, 0x9a, 0x06, 0x5b, 0x27, 0x46, 0xd4,
	0x6e, 0x80, 0xc5, 0x7b, 0xc8, 0x89, 0x89, 0xd5, 0x5d, 0x6b, 0x91, 0x73, 0xc8, 0xaa, 0x4e, 0x61,
	0xe4, 0x42, 0xb6, 0x2f, 0x6e, 0xd0, 0x5a, 0xf9, 0x03, 0x23, 0x97, 0x01, 0x16, 0xbf, 0x21, 0xbf,
	0xda, 0x5a, 0x37, 0xcc, 0x71, 0xc8, 0x3a, 0xb9, 0x97, 0x35, 0x3b, 0x62, 0xfd, 0x10, 0x98, 0x6e,
	0xe3, 0x24, 0x4c, 0xb7, 0x84, 0x6d, 0xe4, 0xcf, 0xb4, 0xe5, 0x17, 0x30, 0xea, 0x8c, 0x42, 0x43,
	0xbc, 0xd3, 0x32, 0x80, 0xe2, 0x1b, 0xcc, 0xc2, 0xc5, 0xa7, 0xd0, 0xe6, 0xcf, 0x21, 0x53, 0xd2,
	0x49, 0xba, 0x35, 0x5f, 0xe7, 0xab, 0xf0, 0x42, 0xde, 0x55, 0x52, 0xa0, 0xf8, 0x9b, 0x84, 0x0c,
	0xfe, 0x02, 0x52, 0x59, 0xd7, 0x22, 0x59, 0xa4, 0xcb, 0x7c, 0x7d, 0x71, 0x90, 0xb8, 0xda, 0xd4,
	0xf5, 0xc7, 0xd6, 0x99, 0xbe, 0xf4, 0x09, 0xfc, 0x19, 0x30, 0x63, 0x05, 0xa3, 0xb4, 0x59, 0x4c,
	0xa3, 0xb3, 0x64, 0x86, 0x66, 0xa8, 0xba, 0x5d, 0xeb, 0xe2, 0x98, 0x01, 0xcc, 0x3f, 0xc0, 0x64,
	0x68, 0xe2, 0x15, 0x70, 0x8d, 0xfd, 0xa0, 0x80, 0x6b, 0xec, 0x79, 0x01, 0xa3, 0x1b, 0x59, 0xef,
	0x02, 0xf7, 0xbb, 0x4d, 0x43, 0xe8, 0x1d, 0x7b, 0x9b, 0x14, 0xff, 0x12, 0x08, 0xa2, 0xf2, 0x9b,
	0xdb, 0x8b, 0x88, 0x9d, 0xa8, 0xa1, 0xa8, 0xc4, 0xec, 0x56, 0x89, 0xf7, 0x2a, 0xe7, 0x48, 0x6f,
	0xe3, 0x3b, 0x7a, 0xe3, 0x90, 0x69, 0xe9, 0x7e, 0x8a, 0x33, 0x2a, 0x21, 0xdb, 0x6f, 0xc1, 0x3a,
	0xe9, 0x50, 0x4c, 0xc2, 0x16, 0x08, 0x50, 0x7f, 0x83, 0xd2, 0xa1, 0x12, 0x53, 0xf2, 0x0f, 0xd0,
	0xf7, 0x30, 0x5b, 0x65, 0x05, 0x2c, 0x52, 0xff, 0xa6, 0xde, 0x7e, 0xf9, 0x04, 0xa6, 0xa5, 0x1f,
	0xf6, 0x4b, 0xaf, 0x91, 0x4f, 0x20, 0xfb, 0x74, 0xb5, 0xf9, 0x7a, 0xfe, 0x60, 0xdd, 0xc0, 0x8c,
	0xdc, 0x9f, 0xd1, 0xdc, 0x6c, 0x2b, 0xe4, 0xaf, 0x20, 0xdd, 0x28, 0xc5, 0x1f, 0xc5, 0xa5, 0xdd,
	0x7e, 0xb5, 0x39, 0x3f, 0x74, 0x45, 0xf1, 0xbc, 0x86, 0xcc, 0x8b, 0x89, 0x0f, 0xb1, 0x03, 0x49,
	0xcf, 0x1f, 0x1f, 0xf9, 0x42, 0xc1, 0xf7, 0x31, 0x7d, 0xe6, 0x37, 0xff, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xa2, 0x54, 0xca, 0xef, 0xdb, 0x03, 0x00, 0x00,
}
